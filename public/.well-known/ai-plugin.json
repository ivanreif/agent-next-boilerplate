{
    "openapi": "3.0.0",
    "info": {
        "title": "Risk Analysis Assistant",
        "description": "An AI-powered risk analysis assistant that evaluates smart contracts, liquidity pools, and DeFi protocols. It provides comprehensive risk assessments including contract security, liquidity analysis, market volatility, and governance risks.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "PLUGIN_URL"
        }
    ],
    "x-mb": {
        "account-id": "tenkai.ch",
        "email": "contact@tenkai.ch",
        "assistant": {
            "name": "Risk Analysis Assistant",
            "description": "An AI-powered risk analysis assistant that evaluates smart contracts, liquidity pools, and DeFi protocols. It provides comprehensive risk assessments including contract security, liquidity analysis, market volatility, and governance risks.",
            "instructions": "You analyze and provide risk assessments for Ethereum smart contracts, liquidity pools, and DeFi protocols. For each analysis, you evaluate multiple risk factors including contract verification and age, liquidity depth and concentration, price volatility, security posture, market metrics, and governance structure. Use the risk-analyzer tool to get detailed risk metrics for any Ethereum address. Present the analysis in a clear, structured format highlighting key risk factors and their implications. For high-risk findings, provide specific recommendations for risk mitigation.",
            "tools": [{ "type": "risk-analyzer" }],
            "image": "https://your-domain.com/logo.png",
            "categories": ["DeFi", "Security", "Risk Analysis", "Smart Contracts"],
            "chainIds": [1],
            "version": "1.0.0"
        }
    },
    "paths": {
        "/api/tools/risk-analyzer": {
            "get": {
                "summary": "Analyze risk metrics for a smart contract",
                "description": "Performs comprehensive risk analysis on an Ethereum smart contract, evaluating contract security, liquidity, volatility, and market risks. This tool only works with smart contract addresses, not regular wallet addresses. The analysis includes contract verification status, code quality, security vulnerabilities, liquidity metrics, market data, and governance structure.",
                "operationId": "analyzeRisk",
                "parameters": [
                    {
                        "name": "address",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{40}$"
                        },
                        "description": "The Ethereum smart contract address to analyze. Must be a valid smart contract address, not a regular wallet address."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful risk analysis",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": ["contractRisk", "liquidityRisk", "volatilityRisk", "securityRisk", "marketRisk", "governanceRisk", "overallRisk", "details"],
                                    "properties": {
                                        "contractRisk": {
                                            "type": "number",
                                            "description": "Risk score for contract verification and age (0-1, higher is riskier)"
                                        },
                                        "liquidityRisk": {
                                            "type": "number",
                                            "description": "Risk score for liquidity depth and concentration (0-1, higher is riskier)"
                                        },
                                        "volatilityRisk": {
                                            "type": "number",
                                            "description": "Risk score for price and TVL volatility (0-1, higher is riskier)"
                                        },
                                        "securityRisk": {
                                            "type": "number",
                                            "description": "Risk score for security issues and code quality (0-1, higher is riskier)"
                                        },
                                        "marketRisk": {
                                            "type": "number",
                                            "description": "Risk score for market metrics and trading activity (0-1, higher is riskier)"
                                        },
                                        "governanceRisk": {
                                            "type": "number",
                                            "description": "Risk score for governance structure and activity (0-1, higher is riskier)"
                                        },
                                        "overallRisk": {
                                            "type": "number",
                                            "description": "Overall risk score combining all factors (0-1, higher is riskier)"
                                        },
                                        "details": {
                                            "type": "object",
                                            "properties": {
                                                "contractVerified": {
                                                    "type": "boolean",
                                                    "description": "Whether the contract is verified on Etherscan"
                                                },
                                                "tvl": {
                                                    "type": "number",
                                                    "description": "Total Value Locked in USD"
                                                },
                                                "volume24h": {
                                                    "type": "number",
                                                    "description": "24-hour trading volume in USD"
                                                },
                                                "holderCount": {
                                                    "type": "number",
                                                    "description": "Number of token holders"
                                                },
                                                "securityIssues": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "description": "List of identified security issues"
                                                },
                                                "liquidityDepth": {
                                                    "type": "number",
                                                    "description": "Ratio of volume to TVL"
                                                },
                                                "marketCap": {
                                                    "type": "number",
                                                    "description": "Market capitalization in USD"
                                                },
                                                "governanceScore": {
                                                    "type": "number",
                                                    "description": "Score for governance structure (0-1)"
                                                },
                                                "codeQuality": {
                                                    "type": "number",
                                                    "description": "Score for code quality (0-1)"
                                                },
                                                "auditStatus": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "description": "List of audit statuses"
                                                },
                                                "historicalIncidents": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "description": "List of historical security incidents"
                                                },
                                                "priceImpact": {
                                                    "type": "number",
                                                    "description": "Price impact of trades"
                                                },
                                                "concentrationRisk": {
                                                    "type": "number",
                                                    "description": "Risk score for liquidity concentration (0-1)"
                                                },
                                                "protocolAge": {
                                                    "type": "number",
                                                    "description": "Age of the protocol in years"
                                                },
                                                "socialMetrics": {
                                                    "type": "object",
                                                    "properties": {
                                                        "twitterFollowers": {
                                                            "type": "number",
                                                            "description": "Number of Twitter followers"
                                                        },
                                                        "telegramMembers": {
                                                            "type": "number",
                                                            "description": "Number of Telegram group members"
                                                        },
                                                        "socialPresence": {
                                                            "type": "number",
                                                            "description": "Overall social presence score (0-1)"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": ["error", "message"],
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message indicating the type of error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Detailed explanation of the error"
                                        },
                                        "details": {
                                            "type": "string",
                                            "description": "Additional information about the error"
                                        }
                                    },
                                    "example": {
                                        "error": "This tool only works with smart contracts",
                                        "message": "The provided address is not a smart contract. Please provide a valid smart contract address to analyze its risk metrics.",
                                        "details": "Smart contracts are programs that run on the Ethereum blockchain. Regular wallet addresses cannot be analyzed by this tool."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": ["error"],
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}